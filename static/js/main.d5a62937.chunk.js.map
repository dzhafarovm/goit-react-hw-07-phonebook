{"version":3,"sources":["Components/Phonebook/phonebook-css/ContactList.module.css","Components/Phonebook/phonebook-css/Filter.module.css","Components/Phonebook/phonebook-css/Phonebook.module.css","redux/Counter/counter-actions.jsx","redux/Counter/counter-reducer.jsx","redux/Phonebook/phonebook-actions.jsx","redux/Phonebook/phonebook-reducer.jsx","redux/store.js","redux/Phonebook/phonebook-selectors.jsx","Components/Phonebook/ContactForm.jsx","Components/Phonebook/ContactList.jsx","Components/Phonebook/Filter.jsx","Components/Phonebook/Phonebook.jsx","App.js","index.js","Components/Phonebook/phonebook-css/ContactForm.module.css"],"names":["module","exports","increment","createAction","decrement","valueReducer","createReducer","state","payload","action","combineReducers","value","step","addContact","name","number","id","shortid","generate","deleteContact","changeFilter","items","sort","a","b","localeCompare","filter","contact","_","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","rootReducer","counter","counterReducer","phonebook","persistReducer","phonebookReducer","store","configureStore","reducer","devTools","process","persistore","persistStore","getContacts","getFilter","onFilteredContacts","contacts","normalizedFilter","toLowerCase","includes","ContactForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","nameId","useRef","numberId","handleContactChange","e","target","onSubmit","preventDefault","find","con","toast","icon","style","borderRadius","background","color","className","css","form","htmlFor","current","label","type","placeholder","onChange","pattern","title","required","btn","ContactList","list","map","item","onClick","onDeleteContact","Filter","inp","Phonebook","phonebookBox","length","position","App","ReactDOM","render","StrictMode","loading","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.d5a62937.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2WeP_\",\"item\":\"ContactList_item__mwfdY\",\"btn\":\"ContactList_btn__3Lp81\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inp\":\"Filter_inp__V7zqr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebookBox\":\"Phonebook_phonebookBox__1eVyh\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const increment = createAction('counter/Increment');\r\nexport const decrement = createAction('counter/Decrement');\r\n\r\n// import { INCREMENT, DECREMENT } from './counter-types';\r\n\r\n// export const increment = value => ({\r\n//   type: INCREMENT,\r\n//   payload: value,\r\n// });\r\n\r\n// export const decrement = value => ({\r\n//   type: DECREMENT,\r\n//   payload: value,\r\n// });\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { increment, decrement } from './counter-actions.jsx';\r\n\r\nconst valueReducer = createReducer(0, {\r\n  [increment]: (state, { payload }) => state + payload,\r\n  [decrement]: (state, action) => state - action.payload,\r\n});\r\n\r\nconst stepReducer = (state = 1, action) => state;\r\n\r\nexport default combineReducers({\r\n  value: valueReducer,\r\n  step: stepReducer,\r\n});\r\n\r\n// import { INCREMENT, DECREMENT } from './counter-types';\r\n\r\n// const valueReducer = (state = 0, { type, payload }) => {\r\n//   switch (type) {\r\n//     case INCREMENT:\r\n//       return state + payload;\r\n\r\n//     case DECREMENT:\r\n//       return state - payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('phonebook/add', ({ name, number }) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction('phonebook/delete');\r\n\r\nexport const changeFilter = createAction('phonebook/changeFilter');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, changeFilter } from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) =>\r\n    [...state, payload].sort((a, b) => a.name.localeCompare(b.name)),\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  combineReducers,\r\n} from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport counterReducer from './Counter/counter-reducer.jsx';\r\nimport phonebookReducer from './Phonebook/phonebook-reducer.jsx';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst phonebookPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  counter: counterReducer,\r\n  phonebook: persistReducer(phonebookPersistConfig, phonebookReducer),\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistore = persistStore(store);\r\n","export const getContacts = state => state.phonebook.items;\r\nexport const getFilter = state => state.phonebook.filter;\r\n\r\nexport const onFilteredContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import { useState, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport shortid from 'shortid';\r\nimport toast from 'react-hot-toast';\r\nimport { addContact } from '../../redux/Phonebook/phonebook-actions';\r\nimport { getContacts } from '../../redux/Phonebook/phonebook-selectors';\r\nimport css from './phonebook-css/ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const nameId = useRef(shortid.generate());\r\n  const numberId = useRef(shortid.generate());\r\n\r\n  const handleContactChange = e => {\r\n    switch (e.target.name) {\r\n      case 'name':\r\n        setName(e.target.value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(e.target.value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (contacts.find(con => con.name.toLowerCase() === name.toLowerCase())) {\r\n      toast(`Name '${name}' is alresdy in contacts`, {\r\n        icon: '📞',\r\n        style: {\r\n          borderRadius: '10px',\r\n          background: '#666',\r\n          color: '#fff',\r\n        },\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if (contacts.find(con => con.number === number)) {\r\n      toast(`Number '${number}' is alresdy in contacts`, {\r\n        icon: '📞',\r\n        style: {\r\n          borderRadius: '10px',\r\n          background: '#666',\r\n          color: '#fff',\r\n        },\r\n      });\r\n      return;\r\n    }\r\n\r\n    dispatch(addContact({ name, number }));\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit} className={css.form}>\r\n        <label htmlFor={nameId.current} className={css.label}>\r\n          Name:\r\n          <input\r\n            className={css.name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            id={nameId.current}\r\n            onChange={handleContactChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <br />\r\n\r\n        <label htmlFor={numberId.current} className={css.label}>\r\n          Number:\r\n          <input\r\n            className={css.number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            placeholder=\"Enter number\"\r\n            value={number}\r\n            id={numberId.current}\r\n            onChange={handleContactChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <br />\r\n\r\n        <button type=\"submit\" className={css.btn}>\r\n          add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/Phonebook/phonebook-actions';\r\nimport { onFilteredContacts } from '../../redux/Phonebook/phonebook-selectors';\r\nimport css from './phonebook-css/ContactList.module.css';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(onFilteredContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id => dispatch(deleteContact(id));\r\n\r\n  return (\r\n    <ul className={css.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={css.item}>\r\n          <div>\r\n            <span>{name}: </span>\r\n            <span>{number}</span>\r\n          </div>\r\n          <button className={css.btn} onClick={() => onDeleteContact(id)}>\r\n            delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../../redux/Phonebook/phonebook-actions';\r\nimport { getFilter } from '../../redux/Phonebook/phonebook-selectors';\r\nimport css from './phonebook-css/Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = e => dispatch(changeFilter(e.target.value));\r\n\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        className={css.inp}\r\n        type=\"text\"\r\n        placeholder=\"Enter name\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport ContactForm from './ContactForm.jsx';\r\nimport ContactList from './ContactList.jsx';\r\nimport Filter from './Filter';\r\nimport { getContacts } from '../../redux/Phonebook/phonebook-selectors';\r\nimport css from './phonebook-css/Phonebook.module.css';\r\n\r\nexport const Phonebook = () => {\r\n  const contacts = useSelector(getContacts);\r\n\r\n  return (\r\n    <div className={css.phonebookBox}>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n\r\n      <h2>Contacts</h2>\r\n      {contacts.length !== 0 ? (\r\n        <Filter />\r\n      ) : (\r\n        <h3>Your contacts list is empty</h3>\r\n      )}\r\n\r\n      <ContactList />\r\n\r\n      <Toaster position=\"top-right\" />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Phonebook } from './Components/Phonebook/Phonebook';\r\n// import { Counter } from './Components/Counter/Counter.jsx';\r\n\r\nexport const App = () => {\r\n  return (\r\n    <>\r\n      {/* <Counter /> */}\r\n      <Phonebook />\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistore } from './redux/store.js';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport { App } from './App';\r\nimport 'normalize.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistore}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3-mp3\",\"name\":\"ContactForm_name__W8fdO\",\"number\":\"ContactForm_number__3pjWt\",\"btn\":\"ContactForm_btn__2wHI4\"};"],"sourceRoot":""}