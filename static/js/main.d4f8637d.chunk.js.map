{"version":3,"sources":["Components/Phonebook/phonebook-css/ContactForm.module.css","Components/Phonebook/phonebook-css/ContactList.module.css","Components/Phonebook/phonebook-css/Filter.module.css","Components/Phonebook/phonebook-css/Phonebook.module.css","redux/Phonebook/ContactSlice.jsx","redux/store.js","Components/Spinner/spinner.jsx","Components/Phonebook/ContactForm.jsx","Components/Phonebook/ContactItem.jsx","Components/Phonebook/ContactList.jsx","Components/Phonebook/Filter.jsx","Components/Phonebook/Phonebook.jsx","App.js","index.js"],"names":["module","exports","contactApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","newContact","body","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","middleware","getDefaultMiddleware","rootReducer","combineReducers","reducer","store","configureStore","devTools","process","setupListeners","dispatch","LoaderSpinner","type","color","height","width","LoaderSpinnerDots","ContactForm","contacts","isLoading","useState","name","setName","phone","setPhone","nameId","useRef","shortid","generate","phoneId","handleContactChange","e","target","value","onSubmit","preventDefault","toastStyle","style","borderRadius","background","find","con","toLowerCase","toast","success","className","css","form","htmlFor","current","label","placeholder","id","onChange","pattern","title","required","number","btn","disabled","ContactListItem","item","onClick","ContactList","list","map","Filter","inp","Phonebook","data","isFetching","filter","setFilter","phonebookBox","length","contact","includes","position","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4f8637d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3-mp3\",\"name\":\"ContactForm_name__W8fdO\",\"number\":\"ContactForm_number__3pjWt\",\"btn\":\"ContactForm_btn__2wHI4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2WeP_\",\"item\":\"ContactList_item__mwfdY\",\"btn\":\"ContactList_btn__3Lp81\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inp\":\"Filter_inp__V7zqr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebookBox\":\"Phonebook_phonebookBox__1eVyh\"};","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const contactApi = createApi({\r\n  reducerPath: 'contactsApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://616883b909e030001712bfff.mockapi.io/api/vi/',\r\n  }),\r\n  tagTypes: ['Contact'],\r\n  endpoints: builder => ({\r\n    fetchContacts: builder.query({\r\n      query: () => `/contacts`,\r\n      providesTags: ['Contact'],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: contactId => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n    createContact: builder.mutation({\r\n      query: newContact => ({\r\n        url: '/contacts/',\r\n        method: 'POST',\r\n        body: newContact,\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n  useCreateContactMutation,\r\n} = contactApi;\r\n","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  combineReducers,\r\n} from '@reduxjs/toolkit';\r\n// import logger from 'redux-logger';\r\n\r\nimport { contactApi } from 'redux/Phonebook/ContactSlice';\r\nimport { setupListeners } from '@reduxjs/toolkit/dist/query';\r\n\r\nconst middleware = [...getDefaultMiddleware(), contactApi.middleware];\r\n\r\nconst rootReducer = combineReducers({\r\n  [contactApi.reducerPath]: contactApi.reducer,\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nsetupListeners(store.dispatch);\r\n","import Loader from 'react-loader-spinner';\r\n\r\nexport const LoaderSpinner = () => {\r\n  return <Loader type=\"Oval\" color=\"#0ab38e\" height={20} width={20} />;\r\n};\r\n\r\nexport const LoaderSpinnerDots = () => {\r\n  return <Loader type=\"ThreeDots\" color=\"#0ab38e\" height={10} width={20} />;\r\n};\r\n","import { useState, useRef } from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport shortid from 'shortid';\r\n\r\nimport { LoaderSpinnerDots } from 'Components/Spinner/spinner';\r\nimport { useCreateContactMutation } from 'redux/Phonebook/ContactSlice.jsx';\r\nimport css from './phonebook-css/ContactForm.module.css';\r\n\r\nexport default function ContactForm({ contacts }) {\r\n  const [createContact, { isLoading }] = useCreateContactMutation();\r\n\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n\r\n  const nameId = useRef(shortid.generate());\r\n  const phoneId = useRef(shortid.generate());\r\n\r\n  const handleContactChange = e => {\r\n    switch (e.target.name) {\r\n      case 'name':\r\n        setName(e.target.value);\r\n        break;\r\n\r\n      case 'phone':\r\n        setPhone(e.target.value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const toastStyle = {\r\n      style: {\r\n        borderRadius: '10px',\r\n        background: '#e8f2f2',\r\n        color: '#000',\r\n      },\r\n    };\r\n\r\n    if (contacts.find(con => con.name.toLowerCase() === name.toLowerCase())) {\r\n      toast(`Name '${name}' is alresdy in contacts`, toastStyle);\r\n\r\n      return;\r\n    }\r\n\r\n    if (contacts.find(con => con.phone === phone)) {\r\n      toast(`Number '${phone}' is alresdy in contacts`, toastStyle);\r\n      return;\r\n    }\r\n\r\n    createContact({ name, phone });\r\n    toast.success(`Contact '${name}' is added`);\r\n\r\n    setName('');\r\n    setPhone('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit} className={css.form}>\r\n        <label htmlFor={nameId.current} className={css.label}>\r\n          Name:\r\n          <input\r\n            className={css.name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            id={nameId.current}\r\n            onChange={handleContactChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <br />\r\n\r\n        <label htmlFor={phoneId.current} className={css.label}>\r\n          Number:\r\n          <input\r\n            className={css.number}\r\n            type=\"tel\"\r\n            name=\"phone\"\r\n            placeholder=\"Enter number\"\r\n            value={phone}\r\n            id={phoneId.current}\r\n            onChange={handleContactChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <br />\r\n\r\n        <button type=\"submit\" className={css.btn} disabled={isLoading}>\r\n          {isLoading ? <LoaderSpinnerDots /> : 'add contact'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import toast from 'react-hot-toast';\r\n\r\nimport { useDeleteContactMutation } from 'redux/Phonebook/ContactSlice.jsx';\r\nimport { LoaderSpinnerDots } from 'Components/Spinner/spinner';\r\nimport css from './phonebook-css/ContactList.module.css';\r\n\r\nexport default function ContactListItem({ id, name, phone }) {\r\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\r\n\r\n  return (\r\n    <li key={id} className={css.item}>\r\n      <div>\r\n        <span>{name}: </span>\r\n        <span>{phone}</span>\r\n      </div>\r\n      <button\r\n        className={css.btn}\r\n        onClick={() => {\r\n          deleteContact(id);\r\n          toast.success(`Contact '${name}' deleted`);\r\n        }}\r\n        disabled={isLoading}\r\n      >\r\n        {isLoading ? <LoaderSpinnerDots /> : 'delete'}\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n","import ContactListItem from './ContactItem';\r\nimport css from './phonebook-css/ContactList.module.css';\r\n\r\nexport default function ContactList({ contacts }) {\r\n  return (\r\n    <ul className={css.list}>\r\n      {contacts.map(({ id, name, phone }) => (\r\n        <ContactListItem key={id} id={id} name={name} phone={phone} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import css from './phonebook-css/Filter.module.css';\r\n\r\nexport default function Filter({ value, onChange }) {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        className={css.inp}\r\n        type=\"text\"\r\n        placeholder=\"Enter contact's name\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { Toaster } from 'react-hot-toast';\r\n\r\nimport ContactForm from './ContactForm.jsx';\r\nimport ContactList from './ContactList.jsx';\r\nimport Filter from './Filter';\r\nimport { LoaderSpinner } from 'Components/Spinner/spinner';\r\nimport { useFetchContactsQuery } from 'redux/Phonebook/ContactSlice.jsx';\r\nimport css from './phonebook-css/Phonebook.module.css';\r\n\r\nexport const Phonebook = () => {\r\n  const { data, isFetching } = useFetchContactsQuery();\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const onChange = e => setFilter(e.target.value);\r\n\r\n  const onFilteredContacts = () => {\r\n    return data.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={css.phonebookBox}>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm contacts={data} />\r\n\r\n      <h2>Contacts</h2>\r\n      {data && data.length !== 0 ? (\r\n        <Filter value={filter} onChange={onChange} />\r\n      ) : (\r\n        <h3>Your contacts list is empty</h3>\r\n      )}\r\n\r\n      {isFetching && <LoaderSpinner />}\r\n      {data && <ContactList contacts={onFilteredContacts()} />}\r\n\r\n      <Toaster position=\"top-right\" />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Phonebook } from 'Components/Phonebook/Phonebook';\r\n\r\nexport const App = () => {\r\n  return (\r\n    <>\r\n      <Phonebook />\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from 'redux/store';\r\nimport { App } from './App';\r\nimport 'normalize.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}